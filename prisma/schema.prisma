// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model SignMessageHistory {
  id          Int      @id @default(autoincrement())
  passAccount PassWallet @relation(fields: [passAccountId], references: [id])
  passAccountId Int
  signer      String   // Address of the signer
  domainUrl   String   // URL of the dapp requesting signature
  message     String   // Message being signed
  signature   String   // The resulting signature
  sessionId   String?  // WalletConnect session ID
  createdAt   DateTime @default(now())
}

model PassWallet {
  id        Int      @id @default(autoincrement())
  address   String   @unique
  name      String
  owner     String   // General Signable Message Admin
  createdAt DateTime @default(now())

  signedMessages SignMessageHistory[]
  signDomainPermissions SignDomainPermission[]
  assets    Asset[]
  subaccounts Subaccount[]
  inboxTransactions InboxTransaction[]
}

model SignDomainPermission {
  id        Int      @id @default(autoincrement())
  domainUrl String   // URL of the dapp requesting signature
  passAccount PassWallet @relation(fields: [passAccountId], references: [id])
  passAccountId Int
  allowedSigner String   // Address of the signer
  updatedAt DateTime @updatedAt

  @@unique([passAccountId, domainUrl, allowedSigner])
}

model Asset {
  id              Int       @id @default(autoincrement())
  walletId        Int
  wallet          PassWallet @relation(fields: [walletId], references: [id])

  tokenType       TokenType
  contractAddress String?   // null for ETH
  tokenId         String?   // for ERC721/1155
  symbol          String
  name            String
  decimals        Int       @default(18)

  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  balances        SubaccountBalance[]
  inboxTransactions InboxTransaction[]

  @@unique([walletId, tokenType, contractAddress])
}

model Subaccount {
  id        Int       @id @default(autoincrement())
  walletId  Int
  wallet    PassWallet @relation(fields: [walletId], references: [id])

  label     String
  address   String     // Optional UI identifier
  createdAt DateTime   @default(now())

  balances  SubaccountBalance[]
}

model SubaccountBalance {
  id           Int        @id @default(autoincrement())
  subaccountId Int
  assetId      Int

  subaccount   Subaccount @relation(fields: [subaccountId], references: [id])
  asset        Asset      @relation(fields: [assetId], references: [id])

  amount       String     // Use string for safe precision
  updatedAt    DateTime   @updatedAt

  @@unique([subaccountId, assetId])
}

model InboxTransaction {
  id               Int         @id @default(autoincrement())
  wallet           PassWallet  @relation(fields: [walletId], references: [id])
  walletId         Int

  asset            Asset?      @relation(fields: [assetId], references: [id])
  assetId          Int?

  transactionHash  String      @unique
  blockNumber      String
  amount           String
  fromAddress      String
  toAddress        String

  claimed          Boolean     @default(false)
  claimedAt        DateTime?

  createdAt        DateTime    @default(now())
}

enum TokenType {
  ETH
  ERC20
  ERC721
  ERC1155
}